<?xml version="1.0" encoding="UTF-8"?>
<workflow>
  <name>hopkin_main</name>
  <name_sync_with_filename>Y</name_sync_with_filename>
  <description/>
  <extended_description/>
  <workflow_version/>
  <workflow_status>0</workflow_status>
  <created_user>-</created_user>
  <created_date>2021/08/30 17:32:34.136</created_date>
  <modified_user>-</modified_user>
  <modified_date>2021/08/30 17:32:34.136</modified_date>
  <parameters>
    <parameter>
      <name>P_JOBNAME</name>
      <default_value>Default</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>P_SOURCEDB</name>
      <default_value>CIVICRM</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>P_SOURCEDB_IDENT</name>
      <default_value>AT</default_value>
      <description/>
    </parameter>
  </parameters>
  <actions>
    <action>
      <name>Start</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>80</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>Success</name>
      <description/>
      <type>SUCCESS</type>
      <attributes/>
      <parallel>N</parallel>
      <xloc>144</xloc>
      <yloc>960</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: get dbvars</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <filename>${PROJECT_HOME}/src/ctrl/hopkin_dbvars.hpl</filename>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <run_configuration>local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>144</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: get dbparams</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <filename>${PROJECT_HOME}/src/ctrl/hopkin_dbparams.hpl</filename>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <run_configuration>local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>208</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: get osenv</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <filename>${PROJECT_HOME}/src/ctrl/hopkin_osenv.hpl</filename>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <run_configuration>local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>272</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: if script exists</name>
      <description/>
      <type>FILES_EXIST</type>
      <attributes/>
      <filename/>
      <fields>
        <field>
          <name>${PROJECT_HOME}/${SCRIPT_FNAME}</name>
        </field>
      </fields>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>336</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: not a delta job ?</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${DELTAJOB}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>N</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>400</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: init prot</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <filename>${PROJECT_HOME}/src/ctrl/hopkin_initprot.hpl</filename>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <run_configuration>local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>560</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: pipeline or workflow ?</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${SCRIPT_TYPE}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>hpl</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>624</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: run pipeline</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <filename>${PROJECT_HOME}/${SCRIPT_FNAME}</filename>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <run_configuration>local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <xloc>336</xloc>
      <yloc>688</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: run workflow</name>
      <description/>
      <type>WORKFLOW</type>
      <attributes/>
      <run_configuration>local</run_configuration>
      <filename>${PROJECT_HOME}/${SCRIPT_FNAME}</filename>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Nothing</loglevel>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <pass_export>N</pass_export>
      <run_configuration>local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <set_append_logfile>N</set_append_logfile>
      <parallel>N</parallel>
      <xloc>592</xloc>
      <yloc>688</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: fail prot</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>UPDATE hopkin_meta.job_prot
SET
	job_status 		= 'failed',
	mod_timestamp 	= CURRENT_TIMESTAMP
WHERE
	job_name 			= '${P_JOBNAME}'
	AND job_status 		= 'started'	
	AND run_id 		= '${RUN_ID}'</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>hopkin_db</connection>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>752</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: not a delta job ? 2</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${DELTAJOB}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>N</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>832</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: finish prot</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>UPDATE hopkin_meta.job_prot
SET
	job_status 		= 'finished',
	mod_timestamp 	= CURRENT_TIMESTAMP
WHERE
	job_name 			= '${P_JOBNAME}'
	AND job_status 		= 'started'	
	AND run_id 		= '${RUN_ID}'</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>hopkin_db</connection>
      <parallel>N</parallel>
      <xloc>144</xloc>
      <yloc>896</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log new delta values</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <logmessage>${DELTA_NEXT_DATE}
${DELTA_NEXT_STR}
${DELTA_NEXT_INT}
${DELTA_NEXT_TS}</logmessage>
      <loglevel>Basic</loglevel>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>896</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: update delta table</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>INSERT INTO hopkin_meta.job_delta (
        target_name,
        source_name,
	source,
        deltatype,
        str_value,
        date_value,
        ts_value,
        int_value,
	run_id
)
VALUES ( '${TARGET_NAME}',
	'${SOURCE_NAME}',
	'${P_SOURCE}',
	'${DELTATYPE}',
	CASE WHEN length('${DELTA_NEXT_STR}') = 0 THEN NULL ELSE '${DELTA_NEXT_STR}' END,
	CASE WHEN length('${DELTA_NEXT_DATE}') = 0 THEN NULL ELSE  '${DELTA_NEXT_DATE}' END,
	CASE WHEN length('${DELTA_NEXT_TS}') = 0 THEN NULL ELSE  '${DELTA_NEXT_TS}' END,
	${DELTA_NEXT_INT},
	${RUN_ID} )
ON DUPLICATE KEY UPDATE
        strvalue        	= CASE WHEN length('${DELTA_NEXT_STR}') = 0 THEN NULL ELSE '${DELTA_NEXT_STR}' END,
        datevalue       	= CASE WHEN length('${DELTA_NEXT_DATE}') = 0 THEN NULL ELSE '${DELTA_NEXT_DATE}' END,
        tsvalue         	= CASE WHEN length('${DELTA_NEXT_TS}') = 0 THEN NULL ELSE '${DELTA_NEXT_TS}' END,
        intvalue        	= ${DELTA_NEXT_INT},
        ins_timestamp   = CURRENT_TIMESTAMP,
	run_id		= ${RUN_ID};
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>hopkin_db</connection>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>960</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: fetch delta values</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <filename>${PROJECT_HOME}/src/ctrl/${DELTASCRIPT}</filename>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <run_configuration>local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <xloc>608</xloc>
      <yloc>480</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log failure</name>
      <description/>
      <type>MAIL</type>
      <attributes/>
      <server>${MAILSERVER}</server>
      <port>${MAILSERVERPORT}</port>
      <destination>${MAILRECIPIENT}</destination>
      <destinationCc/>
      <destinationBCc/>
      <replyto>${MAILSENDERADDRESS}</replyto>
      <replytoname>${MAILSENDERNAME}</replytoname>
      <subject>DWH Job ${P_JOBNAME} failed on ${DWHHOSTNAME}</subject>
      <include_date>N</include_date>
      <contact_person/>
      <contact_phone/>
      <comment/>
      <include_files>N</include_files>
      <zip_files>N</zip_files>
      <zip_name/>
      <use_auth>N</use_auth>
      <use_secure_auth>N</use_secure_auth>
      <auth_user/>
      <auth_password>Encrypted </auth_password>
      <only_comment>N</only_comment>
      <use_HTML>N</use_HTML>
      <use_Priority>N</use_Priority>
      <encoding>UTF-8</encoding>
      <priority>normal</priority>
      <importance>normal</importance>
      <sensitivity>normal</sensitivity>
      <secureconnectiontype>SSL</secureconnectiontype>
      <replyToAddresses>${MAILSENDERADDRESS}</replyToAddresses>
      <filetypes>      </filetypes>
      <embeddedimages>
      </embeddedimages>
      <parallel>N</parallel>
      <xloc>1056</xloc>
      <yloc>400</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>Abort workflow</name>
      <description/>
      <type>ABORT</type>
      <attributes/>
      <parallel>N</parallel>
      <xloc>1056</xloc>
      <yloc>640</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log file not found</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <logmessage>${PROJECT_HOME}/${SCRIPT_FNAME}</logmessage>
      <loglevel>Basic</loglevel>
      <logsubject>File not found</logsubject>
      <parallel>N</parallel>
      <xloc>704</xloc>
      <yloc>400</yloc>
      <attributes_hac/>
    </action>
  </actions>
  <hops>
    <hop>
      <from>Start</from>
      <to>hopkin_main: get dbvars</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: get dbvars</from>
      <to>hopkin_main: get dbparams</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: get dbparams</from>
      <to>hopkin_main: get osenv</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: get osenv</from>
      <to>hopkin_main: if script exists</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: if script exists</from>
      <to>hopkin_main: not a delta job ?</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: not a delta job ?</from>
      <to>hopkin_main: init prot</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: init prot</from>
      <to>hopkin_main: pipeline or workflow ?</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: pipeline or workflow ?</from>
      <to>hopkin_main: run pipeline</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: pipeline or workflow ?</from>
      <to>hopkin_main: run workflow</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run pipeline</from>
      <to>hopkin_main: fail prot</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run workflow</from>
      <to>hopkin_main: fail prot</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run pipeline</from>
      <to>hopkin_main: not a delta job ? 2</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run workflow</from>
      <to>hopkin_main: not a delta job ? 2</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: not a delta job ? 2</from>
      <to>hopkin_main: finish prot</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: finish prot</from>
      <to>Success</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: not a delta job ? 2</from>
      <to>hopkin_main: log new delta values</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log new delta values</from>
      <to>hopkin_main: update delta table</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: update delta table</from>
      <to>hopkin_main: finish prot</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: not a delta job ?</from>
      <to>hopkin_main: fetch delta values</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: fetch delta values</from>
      <to>hopkin_main: init prot</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: get dbvars</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: get dbparams</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: get osenv</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: fetch delta values</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log failure</from>
      <to>Abort workflow</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: init prot</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run workflow</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run pipeline</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: update delta table</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: if script exists</from>
      <to>hopkin_main: log file not found</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log file not found</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>hopkin_main
-----------------------</note>
      <xloc>32</xloc>
      <yloc>32</yloc>
      <width>102</width>
      <heigth>42</heigth>
      <fontname>Ubuntu</fontname>
      <fontsize>11</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>14</fontcolorred>
      <fontcolorgreen>58</fontcolorgreen>
      <fontcolorblue>90</fontcolorblue>
      <backgroundcolorred>201</backgroundcolorred>
      <backgroundcolorgreen>232</backgroundcolorgreen>
      <backgroundcolorblue>251</backgroundcolorblue>
      <bordercolorred>14</bordercolorred>
      <bordercolorgreen>58</bordercolorgreen>
      <bordercolorblue>90</bordercolorblue>
    </notepad>
  </notepads>
  <attributes/>
</workflow>
