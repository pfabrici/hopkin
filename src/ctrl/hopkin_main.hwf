<?xml version="1.0" encoding="UTF-8"?>
<workflow>
  <name>hopkin_main</name>
  <name_sync_with_filename>Y</name_sync_with_filename>
  <description/>
  <extended_description/>
  <workflow_version/>
  <workflow_status>0</workflow_status>
  <created_user>-</created_user>
  <created_date>2021/08/30 17:32:34.136</created_date>
  <modified_user>-</modified_user>
  <modified_date>2021/08/30 17:32:34.136</modified_date>
  <parameters>
    <parameter>
      <name>P_JOB_FOLDER</name>
      <default_value>demo</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>P_JOB_NAME</name>
      <default_value>demojob</default_value>
      <description/>
    </parameter>
  </parameters>
  <actions>
    <action>
      <name>Start</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <DayOfMonth>1</DayOfMonth>
      <hour>12</hour>
      <intervalMinutes>60</intervalMinutes>
      <intervalSeconds>0</intervalSeconds>
      <minutes>0</minutes>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <weekDay>1</weekDay>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>16</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: Success</name>
      <description/>
      <type>SUCCESS</type>
      <attributes/>
      <parallel>N</parallel>
      <xloc>288</xloc>
      <yloc>1216</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: fetch params from DB</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <clear_files>N</clear_files>
      <clear_rows>N</clear_rows>
      <create_parent_folder>N</create_parent_folder>
      <exec_per_row>N</exec_per_row>
      <filename>${PROJECT_HOME}/src/ctrl/hopkin_dbparams.hpl</filename>
      <loglevel>Basic</loglevel>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <params_from_previous>N</params_from_previous>
      <run_configuration>local</run_configuration>
      <set_append_logfile>N</set_append_logfile>
      <set_logfile>N</set_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>272</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: get OS env variables</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <clear_files>N</clear_files>
      <clear_rows>N</clear_rows>
      <create_parent_folder>N</create_parent_folder>
      <exec_per_row>N</exec_per_row>
      <filename>${PROJECT_HOME}/src/ctrl/hopkin_osenv.hpl</filename>
      <loglevel>Basic</loglevel>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <params_from_previous>N</params_from_previous>
      <run_configuration>local</run_configuration>
      <set_append_logfile>N</set_append_logfile>
      <set_logfile>N</set_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>80</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: does script exist ?</name>
      <description/>
      <type>FILES_EXIST</type>
      <attributes/>
      <filename/>
      <fields>
        <field>
          <name>${PROJECT_HOME}/${SCRIPT_FNAME}</name>
        </field>
      </fields>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>400</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: no delta job pre exec ?</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <comparevalue>N</comparevalue>
      <fieldtype>string</fieldtype>
      <successbooleancondition>false</successbooleancondition>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successwhenvarset>N</successwhenvarset>
      <valuetype>variable</valuetype>
      <variablename>${IS_DELTA_JOB}</variablename>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>464</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: set running protocol</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <clear_files>N</clear_files>
      <clear_rows>N</clear_rows>
      <create_parent_folder>N</create_parent_folder>
      <exec_per_row>N</exec_per_row>
      <filename>${PROJECT_HOME}/src/ctrl/hopkin_initprot.hpl</filename>
      <loglevel>Basic</loglevel>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <params_from_previous>N</params_from_previous>
      <run_configuration>local</run_configuration>
      <set_append_logfile>N</set_append_logfile>
      <set_logfile>N</set_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>656</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: pipeline or workflow ?</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <comparevalue>hpl</comparevalue>
      <fieldtype>string</fieldtype>
      <successbooleancondition>false</successbooleancondition>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successwhenvarset>N</successwhenvarset>
      <valuetype>variable</valuetype>
      <variablename>${SCRIPT_TYPE}</variablename>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>784</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: run pipeline</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <clear_files>N</clear_files>
      <clear_rows>N</clear_rows>
      <create_parent_folder>N</create_parent_folder>
      <exec_per_row>N</exec_per_row>
      <filename>${PROJECT_HOME}/${SCRIPT_FNAME}</filename>
      <loglevel>Basic</loglevel>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <params_from_previous>N</params_from_previous>
      <run_configuration>local</run_configuration>
      <set_append_logfile>N</set_append_logfile>
      <set_logfile>N</set_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <parallel>N</parallel>
      <xloc>288</xloc>
      <yloc>864</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: run workflow</name>
      <description/>
      <type>WORKFLOW</type>
      <attributes/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <create_parent_folder>N</create_parent_folder>
      <exec_per_row>N</exec_per_row>
      <filename>${PROJECT_HOME}/${SCRIPT_FNAME}</filename>
      <loglevel>Nothing</loglevel>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <params_from_previous>N</params_from_previous>
      <run_configuration>local</run_configuration>
      <set_append_logfile>N</set_append_logfile>
      <set_logfile>N</set_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <parallel>N</parallel>
      <xloc>608</xloc>
      <yloc>864</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: failure protocol</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <connection>hopkin_db</connection>
      <sendOneStatement>N</sendOneStatement>
      <sql>UPDATE hopkin_meta.job_prot
SET
	job_status 		= 'failed',
	mod_timestamp 	= CURRENT_TIMESTAMP
WHERE
	job_name 			= '${P_JOB_NAME}'
	AND job_folder		= '${P_JOB_FOLDER}'
	AND job_status 		= 'running'	
	AND process_id 		= '${PROCESS_ID}'</sql>
      <sqlfromfile>N</sqlfromfile>
      <useVariableSubstitution>Y</useVariableSubstitution>
      <parallel>N</parallel>
      <xloc>608</xloc>
      <yloc>928</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: no delta job post exec ? </name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <comparevalue>N</comparevalue>
      <fieldtype>string</fieldtype>
      <successbooleancondition>false</successbooleancondition>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successwhenvarset>N</successwhenvarset>
      <valuetype>variable</valuetype>
      <variablename>${IS_DELTA_JOB}</variablename>
      <parallel>N</parallel>
      <xloc>288</xloc>
      <yloc>928</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: finishing prot</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <connection>hopkin</connection>
      <sendOneStatement>N</sendOneStatement>
      <sql>UPDATE job_prot
SET
	job_status 		= 'finished',
	mod_timestamp 	= CURRENT_TIMESTAMP
WHERE
	job_name 		= '${P_JOB_NAME}'
	AND job_folder	= '${P_JOB_FOLDER}'
	AND job_status 	= 'running'	
	AND process_id 	= '${PROCESS_ID}'</sql>
      <sqlfilename/>
      <sqlfromfile>N</sqlfromfile>
      <useVariableSubstitution>Y</useVariableSubstitution>
      <parallel>N</parallel>
      <xloc>288</xloc>
      <yloc>1152</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log new delta value</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>${DELTA_NEXT}
</logmessage>
      <logsubject>DELTA_NEXT = </logsubject>
      <parallel>N</parallel>
      <xloc>608</xloc>
      <yloc>992</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: update delta table</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <connection>hopkin</connection>
      <sendOneStatement>N</sendOneStatement>
      <sql>INSERT INTO job_delta (
       target_name,
       source_name,
       delta_type,
       delta_value,
	process_id
)
VALUES ( '${TARGET_NAME}',
	'${SOURCE_NAME}',
	'${DELTA_TYPE}',
	CASE WHEN length('${DELTA_NEXT}') = 0 THEN NULL ELSE '${DELTA_NEXT}' END,
	'${PROCESS_ID}' )
ON DUPLICATE KEY UPDATE
       delta_value        	= CASE WHEN length('${DELTA_NEXT}') = 0 THEN NULL ELSE '${DELTA_NEXT}' END,
       ins_timestamp   	= CURRENT_TIMESTAMP,
	process_id		= '${PROCESS_ID}';
</sql>
      <sqlfromfile>N</sqlfromfile>
      <useVariableSubstitution>Y</useVariableSubstitution>
      <parallel>N</parallel>
      <xloc>608</xloc>
      <yloc>1056</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: fetch delta values</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <clear_files>N</clear_files>
      <clear_rows>N</clear_rows>
      <create_parent_folder>N</create_parent_folder>
      <exec_per_row>N</exec_per_row>
      <filename>${PROJECT_HOME}/src/ctrl/${DELTA_SCRIPT}</filename>
      <loglevel>Basic</loglevel>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <params_from_previous>N</params_from_previous>
      <run_configuration>local</run_configuration>
      <set_append_logfile>N</set_append_logfile>
      <set_logfile>N</set_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <parallel>N</parallel>
      <xloc>608</xloc>
      <yloc>592</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log failure</name>
      <description/>
      <type>MAIL</type>
      <attributes/>
      <server>${MAILSERVER}</server>
      <port>${MAILSERVERPORT}</port>
      <destination>${MAILRECIPIENT}</destination>
      <destinationCc/>
      <destinationBCc/>
      <replyto>${MAILSENDERADDRESS}</replyto>
      <replytoname>${MAILSENDERNAME}</replytoname>
      <subject>DWH Job ${P_JOBNAME} failed on ${DWHHOSTNAME}</subject>
      <include_date>N</include_date>
      <contact_person/>
      <contact_phone/>
      <comment/>
      <include_files>Y</include_files>
      <zip_files>N</zip_files>
      <zip_name/>
      <use_auth>N</use_auth>
      <usexoauth2>N</usexoauth2>
      <use_secure_auth>N</use_secure_auth>
      <auth_user/>
      <auth_password>Encrypted </auth_password>
      <only_comment>N</only_comment>
      <use_HTML>N</use_HTML>
      <use_Priority>N</use_Priority>
      <encoding>UTF-8</encoding>
      <priority>normal</priority>
      <importance>normal</importance>
      <sensitivity>normal</sensitivity>
      <secureconnectiontype>SSL</secureconnectiontype>
      <replyToAddresses>${MAILSENDERADDRESS}</replyToAddresses>
      <filetypes>
        <filetype>GENERAL</filetype>
        <filetype>LOG</filetype>
        <filetype>ERRORLINE</filetype>
        <filetype>ERROR</filetype>
        <filetype>WARNING</filetype>
      </filetypes>
      <embeddedimages>
      </embeddedimages>
      <parallel>N</parallel>
      <xloc>1376</xloc>
      <yloc>640</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: abort</name>
      <description/>
      <type>ABORT</type>
      <attributes/>
      <always_log_rows>N</always_log_rows>
      <parallel>N</parallel>
      <xloc>1376</xloc>
      <yloc>1200</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log file not found</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>The ${PROJECT_HOME}/${SCRIPT_FNAME} file
is not available for execution.</logmessage>
      <logsubject>File not found</logsubject>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>400</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: is P_JOB_NAME set ?</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <fieldtype>string</fieldtype>
      <successbooleancondition>true</successbooleancondition>
      <successcondition>different</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successwhenvarset>N</successwhenvarset>
      <valuetype>variable</valuetype>
      <variablename>${P_JOB_NAME}</variablename>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>144</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log P_JOB_NAME not set</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>Parameter P_JOB_NAME is not set.
Please restart the job with a valid value.</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>144</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log access to meta db failed</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>It was not possible to access the meta data
tables correctly. Please verify connection,
tables and content.</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>272</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: is job configured ?</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <fieldtype>string</fieldtype>
      <successbooleancondition>true</successbooleancondition>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successwhenvarset>Y</successwhenvarset>
      <valuetype>variable</valuetype>
      <variablename>${SCRIPT_FNAME}</variablename>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>336</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log job not known</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>The Job ${P_JOBNAME}is not known in the meta db.
</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>336</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log fetch delta failed</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>Fetching the delta values from the
meta db failed. Please check connectivity
and content of the job_delta table.</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>592</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log failed protocol initialization</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>Writing the initial record to the job_prot
table failed.</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>656</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log failed protocol update</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>Error during update of the protocol table 
to set the failed status. Please update 
manually.</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>928</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log failed delta update</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>Failure during update of delta table.</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>1056</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: job skipped ?</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <comparevalue>running</comparevalue>
      <fieldtype>string</fieldtype>
      <successbooleancondition>true</successbooleancondition>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successwhenvarset>N</successwhenvarset>
      <valuetype>variable</valuetype>
      <variablename>${JOB_RUNSTATUS}</variablename>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>720</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log skipped job</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>The job is already running, skipping</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>720</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log failed protocol update finish</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>Error during update of the protocol table 
to set the finished status. Please update 
manually.</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>1152</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: does delta scrpt exist ?</name>
      <description/>
      <type>FILE_EXISTS</type>
      <attributes/>
      <filename>${PROJECT_HOME}/src/ctrl/${DELTA_SCRIPT}</filename>
      <parallel>N</parallel>
      <xloc>608</xloc>
      <yloc>528</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log missing delta script</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>A custom delta script ( ${DELTASCRIPT} ) is set and not found </logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>528</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: is P_JOB_FOLDER set ?</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <attributes/>
      <fieldtype>string</fieldtype>
      <successbooleancondition>true</successbooleancondition>
      <successcondition>different</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successwhenvarset>N</successwhenvarset>
      <valuetype>variable</valuetype>
      <variablename>${P_JOB_FOLDER}</variablename>
      <parallel>N</parallel>
      <xloc>464</xloc>
      <yloc>208</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>hopkin_main: log P_JOB_FOLDER not set</name>
      <description/>
      <type>WRITE_TO_LOG</type>
      <attributes/>
      <loglevel>Basic</loglevel>
      <logmessage>Parameter P_JOBNAME is not set.
Please restart the job with a valid value.</logmessage>
      <logsubject/>
      <parallel>N</parallel>
      <xloc>896</xloc>
      <yloc>208</yloc>
      <attributes_hac/>
    </action>
  </actions>
  <hops>
    <hop>
      <from>hopkin_main: does script exist ?</from>
      <to>hopkin_main: no delta job pre exec ?</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: no delta job pre exec ?</from>
      <to>hopkin_main: set running protocol</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: pipeline or workflow ?</from>
      <to>hopkin_main: run pipeline</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: pipeline or workflow ?</from>
      <to>hopkin_main: run workflow</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run pipeline</from>
      <to>hopkin_main: failure protocol</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run workflow</from>
      <to>hopkin_main: failure protocol</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run pipeline</from>
      <to>hopkin_main: no delta job post exec ? </to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: run workflow</from>
      <to>hopkin_main: no delta job post exec ? </to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: no delta job post exec ? </from>
      <to>hopkin_main: finishing prot</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: finishing prot</from>
      <to>hopkin_main: Success</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: no delta job post exec ? </from>
      <to>hopkin_main: log new delta value</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log new delta value</from>
      <to>hopkin_main: update delta table</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: update delta table</from>
      <to>hopkin_main: finishing prot</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: fetch delta values</from>
      <to>hopkin_main: set running protocol</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log failure</from>
      <to>hopkin_main: abort</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: does script exist ?</from>
      <to>hopkin_main: log file not found</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log file not found</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: is P_JOB_NAME set ?</from>
      <to>hopkin_main: log P_JOB_NAME not set</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log P_JOB_NAME not set</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Start</from>
      <to>hopkin_main: get OS env variables</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: get OS env variables</from>
      <to>hopkin_main: is P_JOB_NAME set ?</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: fetch params from DB</from>
      <to>hopkin_main: log access to meta db failed</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log access to meta db failed</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: fetch params from DB</from>
      <to>hopkin_main: is job configured ?</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: is job configured ?</from>
      <to>hopkin_main: log job not known</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log job not known</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: is job configured ?</from>
      <to>hopkin_main: does script exist ?</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: fetch delta values</from>
      <to>hopkin_main: log fetch delta failed</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log fetch delta failed</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: set running protocol</from>
      <to>hopkin_main: log failed protocol initialization</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log failed protocol initialization</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: failure protocol</from>
      <to>hopkin_main: log failed protocol update</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log failed protocol update</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: update delta table</from>
      <to>hopkin_main: log failed delta update</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log failed delta update</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: set running protocol</from>
      <to>hopkin_main: job skipped ?</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: job skipped ?</from>
      <to>hopkin_main: pipeline or workflow ?</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: job skipped ?</from>
      <to>hopkin_main: log skipped job</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log skipped job</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: finishing prot</from>
      <to>hopkin_main: log failed protocol update finish</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log failed protocol update finish</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: no delta job pre exec ?</from>
      <to>hopkin_main: does delta scrpt exist ?</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: does delta scrpt exist ?</from>
      <to>hopkin_main: fetch delta values</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: does delta scrpt exist ?</from>
      <to>hopkin_main: log missing delta script</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: log missing delta script</from>
      <to>hopkin_main: log failure</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: is P_JOB_FOLDER set ?</from>
      <to>hopkin_main: log P_JOB_FOLDER not set</to>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: is P_JOB_NAME set ?</from>
      <to>hopkin_main: is P_JOB_FOLDER set ?</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>hopkin_main: is P_JOB_FOLDER set ?</from>
      <to>hopkin_main: fetch params from DB</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <backgroundcolorblue>251</backgroundcolorblue>
      <backgroundcolorgreen>232</backgroundcolorgreen>
      <backgroundcolorred>201</backgroundcolorred>
      <bordercolorblue>90</bordercolorblue>
      <bordercolorgreen>58</bordercolorgreen>
      <bordercolorred>14</bordercolorred>
      <fontbold>N</fontbold>
      <fontcolorblue>90</fontcolorblue>
      <fontcolorgreen>58</fontcolorgreen>
      <fontcolorred>14</fontcolorred>
      <fontitalic>N</fontitalic>
      <fontname>Ubuntu</fontname>
      <fontsize>11</fontsize>
      <height>44</height>
      <xloc>32</xloc>
      <yloc>32</yloc>
      <note>hopkin_main
-----------------------</note>
      <width>125</width>
    </notepad>
  </notepads>
  <attributes/>
</workflow>
